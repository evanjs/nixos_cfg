#! /nix/store/hrpvwkjz04s9i4nmli843hyw9z4pwhww-bash-4.4-p23/bin/bash

NIX_DISK_IMAGE=$(readlink -f ${NIX_DISK_IMAGE:-./sekka.qcow2})

if ! test -e "$NIX_DISK_IMAGE"; then
    /nix/store/ykjp6884362vywq3xbm8vn46xhw9d14b-qemu-host-cpu-only-for-vm-tests-4.2.0/bin/qemu-img create -f qcow2 "$NIX_DISK_IMAGE" \
      512M || exit 1
fi

# Create a directory for storing temporary data of the running VM.
if [ -z "$TMPDIR" -o -z "$USE_TMPDIR" ]; then
    TMPDIR=$(mktemp -d nix-vm.XXXXXXXXXX --tmpdir)
fi

# Create a directory for exchanging data with the VM.
mkdir -p $TMPDIR/xchg



cd $TMPDIR
idx=0


# Start QEMU.
exec /nix/store/ykjp6884362vywq3xbm8vn46xhw9d14b-qemu-host-cpu-only-for-vm-tests-4.2.0/bin/qemu-kvm -cpu host \
    -name sekka \
    -m 384 \
    -smp 1 \
    -device virtio-rng-pci \
    -net nic,netdev=user.0,model=virtio -netdev user,id=user.0${QEMU_NET_OPTS:+,$QEMU_NET_OPTS} \
    -virtfs local,path=/nix/store,security_model=none,mount_tag=store \
    -virtfs local,path=$TMPDIR/xchg,security_model=none,mount_tag=xchg \
    -virtfs local,path=${SHARED_DIR:-$TMPDIR/xchg},security_model=none,mount_tag=shared \
    -drive cache=writeback,file=$NIX_DISK_IMAGE,id=drive1,if=none,index=1,werror=report -device virtio-blk-pci,drive=drive1 \
    -vga std -usb -device usb-tablet,bus=usb-bus.0 -kernel /nix/store/qxhkxzi7f42nlw7k6f0wv1c6cf18rp05-nixos-system-sekka-20.03.2533.76adfc180c0/kernel -initrd /nix/store/qxhkxzi7f42nlw7k6f0wv1c6cf18rp05-nixos-system-sekka-20.03.2533.76adfc180c0/initrd -append "$(cat /nix/store/qxhkxzi7f42nlw7k6f0wv1c6cf18rp05-nixos-system-sekka-20.03.2533.76adfc180c0/kernel-params) init=/nix/store/qxhkxzi7f42nlw7k6f0wv1c6cf18rp05-nixos-system-sekka-20.03.2533.76adfc180c0/init regInfo=/nix/store/kiv8fj0dmmc7bjn212mdi5qn136s3bkh-closure-info/registration console=ttyS0,115200n8 console=tty0 $QEMU_KERNEL_PARAMS" \
    $QEMU_OPTS \
    "$@"
